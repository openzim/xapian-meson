/* Generated by Snowball 2.0.0 - https://snowballstem.org/ */


#include <config.h>
#include <limits.h>
#include "nepali.h"

static const symbol s_pool[] = {
#define s_0_0 0
0xE0, 0xA4, 0x95, 0xE0, 0xA5, 0x80,
#define s_0_1 6
0xE0, 0xA4, 0xB2, 0xE0, 0xA4, 0xBE, 0xE0, 0xA4, 0x87,
#define s_0_2 15
0xE0, 0xA4, 0xB2, 0xE0, 0xA5, 0x87,
#define s_0_3 21
0xE0, 0xA4, 0xB2, 0xE0, 0xA4, 0xBE, 0xE0, 0xA4, 0x88,
#define s_0_4 30
0xE0, 0xA4, 0x95, 0xE0, 0xA5, 0x88,
#define s_0_5 36
0xE0, 0xA4, 0xB8, 0xE0, 0xA4, 0x81, 0xE0, 0xA4, 0x97, 0xE0, 0xA5, 0x88,
#define s_0_6 48
0xE0, 0xA4, 0xAE, 0xE0, 0xA5, 0x88,
#define s_0_7 54
0xE0, 0xA4, 0x95, 0xE0, 0xA5, 0x8B,
#define s_0_8 s_0_5
#define s_0_9 60
0xE0, 0xA4, 0xB8, 0xE0, 0xA4, 0x82, 0xE0, 0xA4, 0x97,
#define s_0_10 69
0xE0, 0xA4, 0xAE, 0xE0, 0xA4, 0xBE, 0xE0, 0xA4, 0xB0, 0xE0, 0xA5, 0x8D, 0xE0, 0xA4, 0xAB, 0xE0, 0xA4, 0xA4,
#define s_0_11 87
0xE0, 0xA4, 0xB0, 0xE0, 0xA4, 0xA4,
#define s_0_12 93
0xE0, 0xA4, 0x95, 0xE0, 0xA4, 0xBE,
#define s_0_13 s_0_10
#define s_0_14 99
0xE0, 0xA4, 0xA6, 0xE0, 0xA5, 0x8D, 0xE0, 0xA4, 0xB5, 0xE0, 0xA4, 0xBE, 0xE0, 0xA4, 0xB0, 0xE0, 0xA4, 0xBE,
#define s_0_15 117
0xE0, 0xA4, 0x95, 0xE0, 0xA4, 0xBF,
#define s_0_16 123
0xE0, 0xA4, 0xAA, 0xE0, 0xA4, 0x9B, 0xE0, 0xA4, 0xBF,
#define s_1_0 132
0xE0, 0xA4, 0x81,
#define s_1_1 135
0xE0, 0xA4, 0x82,
#define s_1_2 138
0xE0, 0xA5, 0x88,
#define s_2_0 141
0xE0, 0xA4, 0x81,
#define s_2_1 144
0xE0, 0xA4, 0x82,
#define s_2_2 147
0xE0, 0xA5, 0x88,
#define s_3_0 150
0xE0, 0xA5, 0x87, 0xE0, 0xA4, 0x95, 0xE0, 0xA5, 0x80,
#define s_3_1 (s_3_2 + 3)
#define s_3_2 159
0xE0, 0xA4, 0x87, 0xE0, 0xA4, 0x8F, 0xE0, 0xA4, 0x95, 0xE0, 0xA5, 0x80,
#define s_3_3 171
0xE0, 0xA4, 0xBF, 0xE0, 0xA4, 0x8F, 0xE0, 0xA4, 0x95, 0xE0, 0xA5, 0x80,
#define s_3_4 183
0xE0, 0xA4, 0xA6, 0xE0, 0xA5, 0x87, 0xE0, 0xA4, 0x96, 0xE0, 0xA5, 0x80,
#define s_3_5 195
0xE0, 0xA4, 0xA5, 0xE0, 0xA5, 0x80,
#define s_3_6 201
0xE0, 0xA4, 0xA6, 0xE0, 0xA5, 0x80,
#define s_3_7 (s_3_8 + 3)
#define s_3_8 (s_3_9 + 3)
#define s_3_9 207
0xE0, 0xA4, 0xA8, 0xE0, 0xA5, 0x87, 0xE0, 0xA4, 0x9B, 0xE0, 0xA5, 0x81,
#define s_3_10 219
0xE0, 0xA4, 0x8F, 0xE0, 0xA4, 0x9B, 0xE0, 0xA5, 0x81,
#define s_3_11 228
0xE0, 0xA4, 0xA8, 0xE0, 0xA5, 0x81,
#define s_3_12 234
0xE0, 0xA4, 0xB9, 0xE0, 0xA4, 0xB0, 0xE0, 0xA5, 0x81,
#define s_3_13 243
0xE0, 0xA4, 0xB9, 0xE0, 0xA4, 0xB0, 0xE0, 0xA5, 0x82,
#define s_3_14 s_3_60
#define s_3_15 252
0xE0, 0xA4, 0xA5, 0xE0, 0xA5, 0x87,
#define s_3_16 s_3_9
#define s_3_17 (s_3_18 + 3)
#define s_3_18 258
0xE0, 0xA4, 0xA8, 0xE0, 0xA5, 0x87, 0xE0, 0xA4, 0x95, 0xE0, 0xA5, 0x88,
#define s_3_19 270
0xE0, 0xA4, 0x8F, 0xE0, 0xA4, 0x95, 0xE0, 0xA5, 0x88,
#define s_3_20 (s_3_21 + 3)
#define s_3_21 279
0xE0, 0xA4, 0x87, 0xE0, 0xA4, 0xA6, 0xE0, 0xA5, 0x88,
#define s_3_22 288
0xE0, 0xA4, 0xBF, 0xE0, 0xA4, 0xA6, 0xE0, 0xA5, 0x88,
#define s_3_23 (s_3_24 + 3)
#define s_3_24 297
0xE0, 0xA4, 0xA8, 0xE0, 0xA5, 0x87, 0xE0, 0xA4, 0x95, 0xE0, 0xA5, 0x8B,
#define s_3_25 (s_3_26 + 3)
#define s_3_26 309
0xE0, 0xA4, 0x87, 0xE0, 0xA4, 0x8F, 0xE0, 0xA4, 0x95, 0xE0, 0xA5, 0x8B,
#define s_3_27 321
0xE0, 0xA4, 0xBF, 0xE0, 0xA4, 0x8F, 0xE0, 0xA4, 0x95, 0xE0, 0xA5, 0x8B,
#define s_3_28 (s_3_29 + 3)
#define s_3_29 333
0xE0, 0xA4, 0x87, 0xE0, 0xA4, 0xA6, 0xE0, 0xA5, 0x8B,
#define s_3_30 342
0xE0, 0xA4, 0xBF, 0xE0, 0xA4, 0xA6, 0xE0, 0xA5, 0x8B,
#define s_3_31 (s_3_32 + 3)
#define s_3_32 351
0xE0, 0xA4, 0x87, 0xE0, 0xA4, 0xAF, 0xE0, 0xA5, 0x8B,
#define s_3_33 360
0xE0, 0xA4, 0xA5, 0xE0, 0xA5, 0x8D, 0xE0, 0xA4, 0xAF, 0xE0, 0xA5, 0x8B,
#define s_3_34 372
0xE0, 0xA4, 0xAD, 0xE0, 0xA4, 0xAF, 0xE0, 0xA5, 0x8B,
#define s_3_35 (s_3_36 + 3)
#define s_3_36 381
0xE0, 0xA4, 0xA5, 0xE0, 0xA4, 0xBF, 0xE0, 0xA4, 0xAF, 0xE0, 0xA5, 0x8B,
#define s_3_37 393
0xE0, 0xA4, 0xA6, 0xE0, 0xA4, 0xBF, 0xE0, 0xA4, 0xAF, 0xE0, 0xA5, 0x8B,
#define s_3_38 (s_3_39 + 3)
#define s_3_39 405
0xE0, 0xA4, 0x87, 0xE0, 0xA4, 0x9B, 0xE0, 0xA5, 0x8C,
#define s_3_40 (s_3_41 + 3)
#define s_3_41 414
0xE0, 0xA4, 0xA8, 0xE0, 0xA5, 0x87, 0xE0, 0xA4, 0x9B, 0xE0, 0xA5, 0x8C,
#define s_3_42 426
0xE0, 0xA4, 0x8F, 0xE0, 0xA4, 0x9B, 0xE0, 0xA5, 0x8C,
#define s_3_43 435
0xE0, 0xA4, 0xBF, 0xE0, 0xA4, 0x9B, 0xE0, 0xA5, 0x8C,
#define s_3_44 (s_3_45 + 6)
#define s_3_45 444
0xE0, 0xA4, 0x9B, 0xE0, 0xA5, 0x8D, 0xE0, 0xA4, 0xAF, 0xE0, 0xA5, 0x8C,
#define s_3_46 456
0xE0, 0xA4, 0xA5, 0xE0, 0xA5, 0x8D, 0xE0, 0xA4, 0xAF, 0xE0, 0xA5, 0x8C,
#define s_3_47 468
0xE0, 0xA4, 0xA5, 0xE0, 0xA4, 0xBF, 0xE0, 0xA4, 0xAF, 0xE0, 0xA5, 0x8C,
#define s_3_48 (s_3_49 + 3)
#define s_3_49 480
0xE0, 0xA4, 0x87, 0xE0, 0xA4, 0x9B, 0xE0, 0xA4, 0xA8, 0xE0, 0xA5, 0x8D,
#define s_3_50 (s_3_51 + 3)
#define s_3_51 492
0xE0, 0xA4, 0xA8, 0xE0, 0xA5, 0x87, 0xE0, 0xA4, 0x9B, 0xE0, 0xA4, 0xA8, 0xE0, 0xA5, 0x8D,
#define s_3_52 507
0xE0, 0xA4, 0x8F, 0xE0, 0xA4, 0x9B, 0xE0, 0xA4, 0xA8, 0xE0, 0xA5, 0x8D,
#define s_3_53 519
0xE0, 0xA4, 0xBF, 0xE0, 0xA4, 0x9B, 0xE0, 0xA4, 0xA8, 0xE0, 0xA5, 0x8D,
#define s_3_54 531
0xE0, 0xA4, 0xB2, 0xE0, 0xA4, 0xBE, 0xE0, 0xA4, 0xA8, 0xE0, 0xA5, 0x8D,
#define s_3_55 543
0xE0, 0xA4, 0x9B, 0xE0, 0xA4, 0xBF, 0xE0, 0xA4, 0xA8, 0xE0, 0xA5, 0x8D,
#define s_3_56 555
0xE0, 0xA4, 0xA5, 0xE0, 0xA4, 0xBF, 0xE0, 0xA4, 0xA8, 0xE0, 0xA5, 0x8D,
#define s_3_57 567
0xE0, 0xA4, 0xAA, 0xE0, 0xA4, 0xB0, 0xE0, 0xA5, 0x8D,
#define s_3_58 (s_3_59 + 6)
#define s_3_59 576
0xE0, 0xA4, 0xA5, 0xE0, 0xA4, 0xBF, 0xE0, 0xA4, 0x87, 0xE0, 0xA4, 0xB8, 0xE0, 0xA5, 0x8D,
#define s_3_60 591
0xE0, 0xA4, 0x9B, 0xE0, 0xA5, 0x87, 0xE0, 0xA4, 0xB8, 0xE0, 0xA5, 0x8D,
#define s_3_61 603
0xE0, 0xA4, 0xB9, 0xE0, 0xA5, 0x8B, 0xE0, 0xA4, 0xB8, 0xE0, 0xA5, 0x8D,
#define s_3_62 (s_3_63 + 3)
#define s_3_63 615
0xE0, 0xA4, 0x87, 0xE0, 0xA4, 0x9B, 0xE0, 0xA4, 0xB8, 0xE0, 0xA5, 0x8D,
#define s_3_64 (s_3_65 + 3)
#define s_3_65 627
0xE0, 0xA4, 0xA8, 0xE0, 0xA5, 0x87, 0xE0, 0xA4, 0x9B, 0xE0, 0xA4, 0xB8, 0xE0, 0xA5, 0x8D,
#define s_3_66 642
0xE0, 0xA4, 0x8F, 0xE0, 0xA4, 0x9B, 0xE0, 0xA4, 0xB8, 0xE0, 0xA5, 0x8D,
#define s_3_67 654
0xE0, 0xA4, 0xBF, 0xE0, 0xA4, 0x9B, 0xE0, 0xA4, 0xB8, 0xE0, 0xA5, 0x8D,
#define s_3_68 (s_3_69 + 3)
#define s_3_69 666
0xE0, 0xA4, 0xA5, 0xE0, 0xA4, 0xBF, 0xE0, 0xA4, 0xB8, 0xE0, 0xA5, 0x8D,
#define s_3_70 678
0xE0, 0xA4, 0xA5, 0xE0, 0xA4, 0xBF, 0xE0, 0xA4, 0x8F,
#define s_3_71 s_3_7
#define s_3_72 s_3_39
#define s_3_73 s_3_8
#define s_3_74 s_3_9
#define s_3_75 687
0xE0, 0xA4, 0xB9, 0xE0, 0xA5, 0x81, 0xE0, 0xA4, 0xA8, 0xE0, 0xA5, 0x87, 0xE0, 0xA4, 0x9B,
#define s_3_76 702
0xE0, 0xA4, 0xB9, 0xE0, 0xA5, 0x81, 0xE0, 0xA4, 0xA8, 0xE0, 0xA5, 0x8D, 0xE0, 0xA4, 0x9B,
#define s_3_77 717
0xE0, 0xA4, 0x87, 0xE0, 0xA4, 0xA8, 0xE0, 0xA5, 0x8D, 0xE0, 0xA4, 0x9B,
#define s_3_78 729
0xE0, 0xA4, 0xBF, 0xE0, 0xA4, 0xA8, 0xE0, 0xA5, 0x8D, 0xE0, 0xA4, 0x9B,
#define s_3_79 s_3_10
#define s_3_80 s_3_43
#define s_3_81 (s_3_82 + 3)
#define s_3_82 741
0xE0, 0xA4, 0xA8, 0xE0, 0xA5, 0x87, 0xE0, 0xA4, 0x95, 0xE0, 0xA4, 0xBE,
#define s_3_83 (s_3_84 + 3)
#define s_3_84 753
0xE0, 0xA4, 0x87, 0xE0, 0xA4, 0x8F, 0xE0, 0xA4, 0x95, 0xE0, 0xA4, 0xBE,
#define s_3_85 765
0xE0, 0xA4, 0xBF, 0xE0, 0xA4, 0x8F, 0xE0, 0xA4, 0x95, 0xE0, 0xA4, 0xBE,
#define s_3_86 (s_3_87 + 3)
#define s_3_87 777
0xE0, 0xA4, 0x87, 0xE0, 0xA4, 0xA6, 0xE0, 0xA4, 0xBE,
#define s_3_88 786
0xE0, 0xA4, 0xBF, 0xE0, 0xA4, 0xA6, 0xE0, 0xA4, 0xBE,
#define s_3_89 795
0xE0, 0xA4, 0xA6, 0xE0, 0xA5, 0x87, 0xE0, 0xA4, 0x96, 0xE0, 0xA4, 0xBF,
#define s_3_90 807
0xE0, 0xA4, 0xAE, 0xE0, 0xA4, 0xBE, 0xE0, 0xA4, 0xA5, 0xE0, 0xA4, 0xBF,
};


static const struct among a_0[17] =
{
/*  0 */ { 6, s_0_0, -1, 2},
/*  1 */ { 9, s_0_1, -1, 1},
/*  2 */ { 6, s_0_2, -1, 1},
/*  3 */ { 9, s_0_3, -1, 1},
/*  4 */ { 6, s_0_4, -1, 2},
/*  5 */ { 12, s_0_5, -1, 1},
/*  6 */ { 6, s_0_6, -1, 1},
/*  7 */ { 6, s_0_7, -1, 2},
/*  8 */ { 9, s_0_8, -1, 1},
/*  9 */ { 9, s_0_9, -1, 1},
/* 10 */ { 18, s_0_10, -1, 1},
/* 11 */ { 6, s_0_11, -1, 1},
/* 12 */ { 6, s_0_12, -1, 2},
/* 13 */ { 6, s_0_13, -1, 1},
/* 14 */ { 18, s_0_14, -1, 1},
/* 15 */ { 6, s_0_15, -1, 2},
/* 16 */ { 9, s_0_16, -1, 1}
};


static const struct among a_1[3] =
{
/*  0 */ { 3, s_1_0, -1, -1},
/*  1 */ { 3, s_1_1, -1, -1},
/*  2 */ { 3, s_1_2, -1, -1}
};


static const struct among a_2[3] =
{
/*  0 */ { 3, s_2_0, -1, 1},
/*  1 */ { 3, s_2_1, -1, 1},
/*  2 */ { 3, s_2_2, -1, 2}
};


static const struct among a_3[91] =
{
/*  0 */ { 9, s_3_0, -1, 1},
/*  1 */ { 9, s_3_1, -1, 1},
/*  2 */ { 12, s_3_2, 1, 1},
/*  3 */ { 12, s_3_3, 1, 1},
/*  4 */ { 12, s_3_4, -1, 1},
/*  5 */ { 6, s_3_5, -1, 1},
/*  6 */ { 6, s_3_6, -1, 1},
/*  7 */ { 6, s_3_7, -1, 1},
/*  8 */ { 9, s_3_8, 7, 1},
/*  9 */ { 12, s_3_9, 8, 1},
/* 10 */ { 9, s_3_10, 7, 1},
/* 11 */ { 6, s_3_11, -1, 1},
/* 12 */ { 9, s_3_12, -1, 1},
/* 13 */ { 9, s_3_13, -1, 1},
/* 14 */ { 6, s_3_14, -1, 1},
/* 15 */ { 6, s_3_15, -1, 1},
/* 16 */ { 6, s_3_16, -1, 1},
/* 17 */ { 9, s_3_17, -1, 1},
/* 18 */ { 12, s_3_18, 17, 1},
/* 19 */ { 9, s_3_19, -1, 1},
/* 20 */ { 6, s_3_20, -1, 1},
/* 21 */ { 9, s_3_21, 20, 1},
/* 22 */ { 9, s_3_22, 20, 1},
/* 23 */ { 9, s_3_23, -1, 1},
/* 24 */ { 12, s_3_24, 23, 1},
/* 25 */ { 9, s_3_25, -1, 1},
/* 26 */ { 12, s_3_26, 25, 1},
/* 27 */ { 12, s_3_27, 25, 1},
/* 28 */ { 6, s_3_28, -1, 1},
/* 29 */ { 9, s_3_29, 28, 1},
/* 30 */ { 9, s_3_30, 28, 1},
/* 31 */ { 6, s_3_31, -1, 1},
/* 32 */ { 9, s_3_32, 31, 1},
/* 33 */ { 12, s_3_33, 31, 1},
/* 34 */ { 9, s_3_34, 31, 1},
/* 35 */ { 9, s_3_35, 31, 1},
/* 36 */ { 12, s_3_36, 35, 1},
/* 37 */ { 12, s_3_37, 35, 1},
/* 38 */ { 6, s_3_38, -1, 1},
/* 39 */ { 9, s_3_39, 38, 1},
/* 40 */ { 9, s_3_40, 38, 1},
/* 41 */ { 12, s_3_41, 40, 1},
/* 42 */ { 9, s_3_42, 38, 1},
/* 43 */ { 9, s_3_43, 38, 1},
/* 44 */ { 6, s_3_44, -1, 1},
/* 45 */ { 12, s_3_45, 44, 1},
/* 46 */ { 12, s_3_46, 44, 1},
/* 47 */ { 12, s_3_47, 44, 1},
/* 48 */ { 9, s_3_48, -1, 1},
/* 49 */ { 12, s_3_49, 48, 1},
/* 50 */ { 12, s_3_50, 48, 1},
/* 51 */ { 15, s_3_51, 50, 1},
/* 52 */ { 12, s_3_52, 48, 1},
/* 53 */ { 12, s_3_53, 48, 1},
/* 54 */ { 12, s_3_54, -1, 1},
/* 55 */ { 12, s_3_55, -1, 1},
/* 56 */ { 12, s_3_56, -1, 1},
/* 57 */ { 9, s_3_57, -1, 1},
/* 58 */ { 9, s_3_58, -1, 1},
/* 59 */ { 15, s_3_59, 58, 1},
/* 60 */ { 12, s_3_60, -1, 1},
/* 61 */ { 12, s_3_61, -1, 1},
/* 62 */ { 9, s_3_62, -1, 1},
/* 63 */ { 12, s_3_63, 62, 1},
/* 64 */ { 12, s_3_64, 62, 1},
/* 65 */ { 15, s_3_65, 64, 1},
/* 66 */ { 12, s_3_66, 62, 1},
/* 67 */ { 12, s_3_67, 62, 1},
/* 68 */ { 9, s_3_68, -1, 1},
/* 69 */ { 12, s_3_69, 68, 1},
/* 70 */ { 9, s_3_70, -1, 1},
/* 71 */ { 3, s_3_71, -1, 1},
/* 72 */ { 6, s_3_72, 71, 1},
/* 73 */ { 6, s_3_73, 71, 1},
/* 74 */ { 9, s_3_74, 73, 1},
/* 75 */ { 15, s_3_75, 74, 1},
/* 76 */ { 15, s_3_76, 71, 1},
/* 77 */ { 12, s_3_77, 71, 1},
/* 78 */ { 12, s_3_78, 71, 1},
/* 79 */ { 6, s_3_79, 71, 1},
/* 80 */ { 6, s_3_80, 71, 1},
/* 81 */ { 9, s_3_81, -1, 1},
/* 82 */ { 12, s_3_82, 81, 1},
/* 83 */ { 9, s_3_83, -1, 1},
/* 84 */ { 12, s_3_84, 83, 1},
/* 85 */ { 12, s_3_85, 83, 1},
/* 86 */ { 6, s_3_86, -1, 1},
/* 87 */ { 9, s_3_87, 86, 1},
/* 88 */ { 9, s_3_88, 86, 1},
/* 89 */ { 12, s_3_89, -1, 1},
/* 90 */ { 12, s_3_90, -1, 1}
};

static const symbol s_0[] = { 0xE0, 0xA4, 0x8F };
static const symbol s_1[] = { 0xE0, 0xA5, 0x87 };
static const symbol s_2[] = { 0xE0, 0xA4, 0xAF, 0xE0, 0xA5, 0x8C };
static const symbol s_3[] = { 0xE0, 0xA4, 0x9B, 0xE0, 0xA5, 0x8C };
static const symbol s_4[] = { 0xE0, 0xA4, 0xA8, 0xE0, 0xA5, 0x8C };
static const symbol s_5[] = { 0xE0, 0xA4, 0xA5, 0xE0, 0xA5, 0x87 };
static const symbol s_6[] = { 0xE0, 0xA4, 0xA4, 0xE0, 0xA5, 0x8D, 0xE0, 0xA4, 0xB0 };

int Xapian::InternalStemNepali::r_remove_category_1() {
    int among_var;
    ket = c;
    among_var = find_among_b(s_pool, a_0, 17, 0, 0);
    if (!(among_var)) return 0;
    bra = c;
    switch (among_var) {
        case 1:
            {   int ret = slice_del();
                if (ret < 0) return ret;
            }
            break;
        case 2:
            {   int m1 = l - c; (void)m1;
                {   int m2 = l - c; (void)m2;
                    if (!(eq_s_b(3, s_0))) goto lab3;
                    goto lab2;
                lab3:
                    c = l - m2;
                    if (!(eq_s_b(3, s_1))) goto lab1;
                }
            lab2:
                goto lab0;
            lab1:
                c = l - m1;
                {   int ret = slice_del();
                    if (ret < 0) return ret;
                }
            }
        lab0:
            break;
    }
    return 1;
}

int Xapian::InternalStemNepali::r_check_category_2() {
    ket = c;
    if (c - 2 <= lb || p[c - 1] >> 5 != 4 || !((262 >> (p[c - 1] & 0x1f)) & 1)) return 0;
    if (!(find_among_b(s_pool, a_1, 3, 0, 0))) return 0;
    bra = c;
    return 1;
}

int Xapian::InternalStemNepali::r_remove_category_2() {
    int among_var;
    ket = c;
    if (c - 2 <= lb || p[c - 1] >> 5 != 4 || !((262 >> (p[c - 1] & 0x1f)) & 1)) return 0;
    among_var = find_among_b(s_pool, a_2, 3, 0, 0);
    if (!(among_var)) return 0;
    bra = c;
    switch (among_var) {
        case 1:
            {   int m1 = l - c; (void)m1;
                if (!(eq_s_b(6, s_2))) goto lab1;
                goto lab0;
            lab1:
                c = l - m1;
                if (!(eq_s_b(6, s_3))) goto lab2;
                goto lab0;
            lab2:
                c = l - m1;
                if (!(eq_s_b(6, s_4))) goto lab3;
                goto lab0;
            lab3:
                c = l - m1;
                if (!(eq_s_b(6, s_5))) return 0;
            }
        lab0:
            {   int ret = slice_del();
                if (ret < 0) return ret;
            }
            break;
        case 2:
            if (!(eq_s_b(9, s_6))) return 0;
            {   int ret = slice_del();
                if (ret < 0) return ret;
            }
            break;
    }
    return 1;
}

int Xapian::InternalStemNepali::r_remove_category_3() {
    ket = c;
    if (!(find_among_b(s_pool, a_3, 91, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    return 1;
}

int Xapian::InternalStemNepali::stem() {
    lb = c; c = l;

    {   int m1 = l - c; (void)m1;
        {   int ret = r_remove_category_1();
            if (ret < 0) return ret;
        }
        c = l - m1;
    }
    {   int m2 = l - c; (void)m2;
        while(1) {
            int m3 = l - c; (void)m3;
            {   int m4 = l - c; (void)m4;
                {   int m5 = l - c; (void)m5;
                    {   int ret = r_check_category_2();
                        if (ret == 0) goto lab2;
                        if (ret < 0) return ret;
                    }
                    c = l - m5;
                    {   int ret = r_remove_category_2();
                        if (ret == 0) goto lab2;
                        if (ret < 0) return ret;
                    }
                }
            lab2:
                c = l - m4;
            }
            {   int ret = r_remove_category_3();
                if (ret == 0) goto lab1;
                if (ret < 0) return ret;
            }
            continue;
        lab1:
            c = l - m3;
            break;
        }
        c = l - m2;
    }
    c = lb;
    return 1;
}

Xapian::InternalStemNepali::InternalStemNepali()
{
}

Xapian::InternalStemNepali::~InternalStemNepali()
{
}

std::string
Xapian::InternalStemNepali::get_description() const
{
    return "nepali";
}
