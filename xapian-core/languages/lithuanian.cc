/* Generated by Snowball 2.0.0 - https://snowballstem.org/ */


#include <config.h>
#include <limits.h>
#include "lithuanian.h"

#define s_0_0 (s_0_1 + 1)
#define s_0_1 (s_0_2 + 2)
#define s_0_2 s_0_47
#define s_0_3 (s_0_4 + 1)
static const symbol s_pool[] = {
#define s_0_4 0
'i', 'o', 's', 'n', 'a',
#define s_0_5 (s_0_6 + 1)
#define s_0_6 5
'i', 'u', 'o', 's', 'n', 'a',
#define s_0_7 11
'y', 's', 'n', 'a',
#define s_0_8 15
0xC4, 0x97, 's', 'n', 'a',
#define s_0_9 s_0_2
#define s_0_10 (s_0_11 + 2)
#define s_0_11 20
'e', 'n', 'i', 'e',
#define s_0_12 24
'e', 'r', 'i', 'e',
#define s_0_13 (s_0_14 + 1)
#define s_0_14 28
'i', 'o', 'j', 'e',
#define s_0_15 (s_0_16 + 1)
#define s_0_16 32
'i', 'u', 'j', 'e',
#define s_0_17 (s_0_18 + 2)
#define s_0_18 36
'e', 'n', 'y', 'j', 'e',
#define s_0_19 41
'e', 'r', 'y', 'j', 'e',
#define s_0_20 46
0xC4, 0x97, 'j', 'e',
#define s_0_21 (s_0_22 + 1)
#define s_0_22 50
'i', 'a', 'm', 'e',
#define s_0_23 54
's', 'i', 'm', 'e',
#define s_0_24 58
'o', 'm', 'e',
#define s_0_25 (s_0_26 + 3)
#define s_0_26 61
't', 'u', 'm', 0xC4, 0x97, 'm', 'e',
#define s_0_27 (s_0_28 + 1)
#define s_0_28 68
'i', 'o', 's', 'e',
#define s_0_29 (s_0_30 + 1)
#define s_0_30 72
'i', 'u', 'o', 's', 'e',
#define s_0_31 (s_0_32 + 2)
#define s_0_32 77
'e', 'n', 'y', 's', 'e',
#define s_0_33 82
'e', 'r', 'y', 's', 'e',
#define s_0_34 87
0xC4, 0x97, 's', 'e',
#define s_0_35 (s_0_36 + 1)
#define s_0_36 91
'i', 'a', 't', 'e',
#define s_0_37 (s_0_38 + 1)
#define s_0_38 95
'k', 'i', 't', 'e',
#define s_0_39 99
's', 'i', 't', 'e',
#define s_0_40 103
'o', 't', 'e',
#define s_0_41 106
't', 'u', 't', 'e',
#define s_0_42 (s_0_43 + 3)
#define s_0_43 110
't', 'u', 'm', 0xC4, 0x97, 't', 'e',
#define s_0_44 s_0_1
#define s_0_45 (s_0_46 + 1)
#define s_0_46 (s_0_47 + 2)
#define s_0_47 117
'e', 'r', 'i', 'a', 'i',
#define s_0_48 (s_0_49 + 3)
#define s_0_49 s_0_64
#define s_0_50 s_0_38
#define s_0_51 (s_0_52 + 2)
#define s_0_52 122
'e', 'r', 'i', 'm', 'i',
#define s_0_53 (s_0_54 + 1)
#define s_0_54 127
'i', 'u', 'm', 'i',
#define s_0_55 s_0_23
#define s_0_56 (s_0_57 + 1)
#define s_0_57 131
'i', 'a', 's', 'i',
#define s_0_58 (s_0_59 + 1)
#define s_0_59 (s_0_60 + 1)
#define s_0_60 135
's', 'i', 'e', 's', 'i',
#define s_0_61 (s_0_62 + 1)
#define s_0_62 140
'a', 'i', 's', 'i',
#define s_0_63 (s_0_64 + 3)
#define s_0_64 144
't', 'u', 'm', 'e', 'i', 's', 'i',
#define s_0_65 151
'u', 'i', 's', 'i',
#define s_0_66 (s_0_67 + 3)
#define s_0_67 155
0xC4, 0x97, 'j', 'o', 's', 'i',
#define s_0_68 (s_0_69 + 1)
#define s_0_69 (s_0_70 + 1)
#define s_0_70 161
's', 'i', 'u', 'o', 's', 'i',
#define s_0_71 (s_0_72 + 1)
#define s_0_72 (s_0_73 + 3)
#define s_0_73 167
0xC4, 0x8D, 'i', 'a', 'u', 's', 'i',
#define s_0_74 174
0xC4, 0x85, 's', 'i',
#define s_0_75 178
0xC4, 0x97, 's', 'i',
#define s_0_76 (s_0_77 + 1)
#define s_0_77 182
't', 0xC5, 0xB3, 's', 'i',
#define s_0_78 (s_0_79 + 2)
#define s_0_79 187
'e', 'n', 't', 'i',
#define s_0_80 191
'i', 'n', 't', 'i',
#define s_0_81 (s_0_82 + 1)
#define s_0_82 195
'i', 'o', 't', 'i',
#define s_0_83 (s_0_84 + 1)
#define s_0_84 199
'i', 'u', 'o', 't', 'i',
#define s_0_85 (s_0_86 + 1)
#define s_0_86 204
'i', 'a', 'u', 't', 'i',
#define s_0_87 209
'y', 't', 'i',
#define s_0_88 (s_0_89 + 3)
#define s_0_89 212
't', 'e', 'l', 0xC4, 0x97, 't', 'i',
#define s_0_90 219
'i', 'n', 0xC4, 0x97, 't', 'i',
#define s_0_91 225
't', 'e', 'r', 0xC4, 0x97, 't', 'i',
#define s_0_92 s_0_65
#define s_0_93 (s_0_94 + 2)
#define s_0_94 232
'e', 'n', 'i', 'u', 'i',
#define s_0_95 s_0_13
#define s_0_96 s_0_20
#define s_0_97 s_0_38
#define s_0_98 s_0_21
#define s_0_99 s_0_22
#define s_0_100 s_0_138
#define s_0_101 (s_0_23 + 1)
#define s_0_102 s_0_23
#define s_0_103 s_0_24
#define s_0_104 s_0_26
#define s_0_105 s_0_25
#define s_0_106 s_0_26
#define s_0_107 237
'a', 'n',
#define s_0_108 (s_0_109 + 1)
#define s_0_109 239
'i', 'o', 'n',
#define s_0_110 (s_0_111 + 1)
#define s_0_111 242
'i', 'u', 'n',
#define s_0_112 245
0xC4, 0x97, 'n',
#define s_0_113 s_0_3
#define s_0_114 s_0_4
#define s_0_115 248
'e', 'n', 'i', 'o',
#define s_0_116 s_0_67
#define s_0_117 s_0_5
#define s_0_118 (s_0_3 + 1)
#define s_0_119 s_0_56
#define s_0_120 s_0_57
#define s_0_121 s_0_58
#define s_0_122 s_0_59
#define s_0_123 s_0_61
#define s_0_124 s_0_62
#define s_0_125 252
'i', 'a', 'i', 's',
#define s_0_126 s_0_64
#define s_0_127 (s_0_128 + 2)
#define s_0_128 256
'e', 'n', 'i', 'm', 'i', 's',
#define s_0_129 (s_0_130 + 1)
#define s_0_130 262
'i', 'o', 'm', 'i', 's',
#define s_0_131 267
'u', 'm', 'i', 's',
#define s_0_132 271
0xC4, 0x97, 'm', 'i', 's',
#define s_0_133 276
'e', 'n', 'i', 's',
#define s_0_134 280
'a', 's', 'i', 's',
#define s_0_135 284
'y', 's', 'i', 's',
#define s_0_136 (s_0_137 + 1)
#define s_0_137 288
'i', 'a', 'm', 's',
#define s_0_138 292
'i', 'e', 'm', 's',
#define s_0_139 (s_0_140 + 2)
#define s_0_140 296
'e', 'n', 'i', 'm', 's',
#define s_0_141 301
'e', 'r', 'i', 'm', 's',
#define s_0_142 (s_0_143 + 1)
#define s_0_143 306
'i', 'o', 'm', 's',
#define s_0_144 310
'u', 'm', 's',
#define s_0_145 313
0xC4, 0x97, 'm', 's',
#define s_0_146 317
'e', 'n', 's',
#define s_0_147 s_0_3
#define s_0_148 s_0_4
#define s_0_149 s_0_5
#define s_0_150 s_0_6
#define s_0_151 320
'e', 'r', 's',
#define s_0_152 s_0_71
#define s_0_153 s_0_72
#define s_0_154 (s_0_73 + 2)
#define s_0_155 323
'i', 'u', 's',
#define s_0_156 s_0_7
#define s_0_157 s_0_32
#define s_0_158 s_0_33
#define s_0_159 s_0_74
#define s_0_160 326
'i', 0xC4, 0x85, 's',
#define s_0_161 s_0_8
#define s_0_162 (s_0_163 + 1)
#define s_0_163 330
'i', 'a', 'm', 0xC4, 0x97, 's',
#define s_0_164 (s_0_165 + 1)
#define s_0_165 336
'k', 'i', 'm', 0xC4, 0x97, 's',
#define s_0_166 342
's', 'i', 'm', 0xC4, 0x97, 's',
#define s_0_167 348
'o', 'm', 0xC4, 0x97, 's',
#define s_0_168 (s_0_169 + 3)
#define s_0_169 353
't', 'u', 'm', 0xC4, 0x97, 'm', 0xC4, 0x97, 's',
#define s_0_170 (s_0_171 + 1)
#define s_0_171 362
'i', 'a', 't', 0xC4, 0x97, 's',
#define s_0_172 368
's', 'i', 't', 0xC4, 0x97, 's',
#define s_0_173 374
'o', 't', 0xC4, 0x97, 's',
#define s_0_174 (s_0_175 + 3)
#define s_0_175 379
't', 'u', 'm', 0xC4, 0x97, 't', 0xC4, 0x97, 's',
#define s_0_176 388
0xC5, 0xAB, 's',
#define s_0_177 391
0xC4, 0xAF, 's',
#define s_0_178 s_0_77
#define s_0_179 s_0_35
#define s_0_180 s_0_36
#define s_0_181 s_0_37
#define s_0_182 s_0_39
#define s_0_183 s_0_40
#define s_0_184 s_0_42
#define s_0_185 s_0_43
#define s_0_186 s_0_5
#define s_0_187 s_0_72
#define s_0_188 (s_0_73 + 2)
#define s_0_189 s_0_73
#define s_0_190 s_0_6
#define s_0_191 s_0_94
#define s_0_192 s_0_70
#define s_0_193 s_0_7
#define s_0_194 s_0_74
#define s_0_195 s_0_160
#define s_0_196 s_0_8
#define s_0_197 394
0xC4, 0x99,
#define s_0_198 s_0_177
#define s_0_199 396
'e', 'n', 0xC4, 0xAF,
#define s_0_200 400
'e', 'r', 0xC4, 0xAF,
#define s_0_201 s_0_76
#define s_0_202 404
'i', 0xC5, 0xB3,
#define s_0_203 407
'e', 'r', 0xC5, 0xB3,
#define s_1_0 411
'i', 'n', 'g',
#define s_1_1 (s_1_2 + 1)
#define s_1_2 414
'i', 'a', 'j',
#define s_1_3 417
'i', 'e', 'j',
#define s_1_4 (s_1_5 + 1)
#define s_1_5 420
'i', 'o', 'j',
#define s_1_6 (s_1_7 + 1)
#define s_1_7 423
'i', 'u', 'o', 'j',
#define s_1_8 427
'a', 'u', 'j',
#define s_1_9 (s_1_10 + 1)
#define s_1_10 430
'i', 0xC4, 0x85, 'j',
#define s_1_11 s_1_61
#define s_1_12 (s_1_13 + 1)
#define s_1_13 434
'i', 0xC5, 0xB3, 'j',
#define s_1_14 (s_1_15 + 1)
#define s_1_15 438
'i', 'o', 'k',
#define s_1_16 (s_1_17 + 2)
#define s_1_17 441
'u', 'l', 'i', 'u', 'k',
#define s_1_18 446
'u', 0xC4, 0x8D, 'i', 'u', 'k',
#define s_1_19 452
'i', 0xC5, 0xA1, 'k',
#define s_1_20 456
'i', 'u', 'l',
#define s_1_21 459
'y', 'l',
#define s_1_22 461
0xC4, 0x97, 'l',
#define s_1_23 (s_1_24 + 1)
#define s_1_24 464
'd', 'a', 'm',
#define s_1_25 467
'j', 'a', 'm',
#define s_1_26 470
'z', 'g', 'a', 'n',
#define s_1_27 474
'a', 'i', 'n',
#define s_1_28 477
'e', 's', 'n',
#define s_1_29 (s_1_30 + 1)
#define s_1_30 480
'i', 'o', 'p',
#define s_1_31 483
'i', 'a', 's',
#define s_1_32 486
'i', 'e', 's',
#define s_1_33 (s_1_34 + 1)
#define s_1_34 489
'i', 'a', 'i', 's',
#define s_1_35 (s_1_36 + 1)
#define s_1_36 493
'i', 'o', 's',
#define s_1_37 (s_1_38 + 1)
#define s_1_38 496
'i', 'u', 'o', 's',
#define s_1_39 (s_1_40 + 1)
#define s_1_40 500
'i', 'a', 'u', 's',
#define s_1_41 (s_1_42 + 1)
#define s_1_42 504
'i', 0xC4, 0x85, 's',
#define s_1_43 508
0xC4, 0x99, 's',
#define s_1_44 511
'u', 't', 0xC4, 0x97, 'a', 'i', 't',
#define s_1_45 (s_1_46 + 1)
#define s_1_46 (s_1_47 + 1)
#define s_1_47 518
's', 'i', 'a', 'n', 't',
#define s_1_48 523
'i', 'n', 't',
#define s_1_49 (s_1_50 + 1)
#define s_1_50 (s_1_51 + 1)
#define s_1_51 526
'i', 'u', 'o', 't',
#define s_1_52 530
'y', 't',
#define s_1_53 532
0xC4, 0x97, 't',
#define s_1_54 535
'y', 'k', 0xC5, 0xA1, 't',
#define s_1_55 s_1_40
#define s_1_56 540
'd', 'a', 'v',
#define s_1_57 543
's', 'v',
#define s_1_58 545
0xC5, 0xA1, 'v',
#define s_1_59 548
'y', 'k', 0xC5, 0xA1, 0xC4, 0x8D,
#define s_1_60 s_1_43
#define s_1_61 554
0xC4, 0x97, 'j', 0xC4, 0x99,
#define s_2_0 559
'o', 'j', 'i', 'm', 'e',
#define s_2_1 564
0xC4, 0x97, 'j', 'i', 'm', 'e',
#define s_2_2 570
'a', 'v', 'i', 'm', 'e',
#define s_2_3 575
'o', 'k', 'a', 't', 'e',
#define s_2_4 580
'a', 'i', 't', 'e',
#define s_2_5 584
'u', 'o', 't', 'e',
#define s_2_6 588
'a', 's', 'i', 'u', 's',
#define s_2_7 593
'o', 'k', 'a', 't', 0xC4, 0x97, 's',
#define s_2_8 600
'a', 'i', 't', 0xC4, 0x97, 's',
#define s_2_9 606
'u', 'o', 't', 0xC4, 0x97, 's',
#define s_2_10 612
'e', 's', 'i', 'u',
#define s_3_0 616
0xC4, 0x8D,
#define s_3_1 618
'd', 0xC5, 0xBE,
#define s_4_0 621
'g', 'd',
};


static const struct among a_0[204] =
{
/*  0 */ { 1, s_0_0, -1, -1},
/*  1 */ { 2, s_0_1, 0, -1},
/*  2 */ { 4, s_0_2, 1, -1},
/*  3 */ { 4, s_0_3, 0, -1},
/*  4 */ { 5, s_0_4, 3, -1},
/*  5 */ { 5, s_0_5, 3, -1},
/*  6 */ { 6, s_0_6, 5, -1},
/*  7 */ { 4, s_0_7, 0, -1},
/*  8 */ { 5, s_0_8, 0, -1},
/*  9 */ { 1, s_0_9, -1, -1},
/* 10 */ { 2, s_0_10, 9, -1},
/* 11 */ { 4, s_0_11, 10, -1},
/* 12 */ { 4, s_0_12, 10, -1},
/* 13 */ { 3, s_0_13, 9, -1},
/* 14 */ { 4, s_0_14, 13, -1},
/* 15 */ { 3, s_0_15, 9, -1},
/* 16 */ { 4, s_0_16, 15, -1},
/* 17 */ { 3, s_0_17, 9, -1},
/* 18 */ { 5, s_0_18, 17, -1},
/* 19 */ { 5, s_0_19, 17, -1},
/* 20 */ { 4, s_0_20, 9, -1},
/* 21 */ { 3, s_0_21, 9, -1},
/* 22 */ { 4, s_0_22, 21, -1},
/* 23 */ { 4, s_0_23, 9, -1},
/* 24 */ { 3, s_0_24, 9, -1},
/* 25 */ { 4, s_0_25, 9, -1},
/* 26 */ { 7, s_0_26, 25, -1},
/* 27 */ { 3, s_0_27, 9, -1},
/* 28 */ { 4, s_0_28, 27, -1},
/* 29 */ { 4, s_0_29, 27, -1},
/* 30 */ { 5, s_0_30, 29, -1},
/* 31 */ { 3, s_0_31, 9, -1},
/* 32 */ { 5, s_0_32, 31, -1},
/* 33 */ { 5, s_0_33, 31, -1},
/* 34 */ { 4, s_0_34, 9, -1},
/* 35 */ { 3, s_0_35, 9, -1},
/* 36 */ { 4, s_0_36, 35, -1},
/* 37 */ { 3, s_0_37, 9, -1},
/* 38 */ { 4, s_0_38, 37, -1},
/* 39 */ { 4, s_0_39, 37, -1},
/* 40 */ { 3, s_0_40, 9, -1},
/* 41 */ { 4, s_0_41, 9, -1},
/* 42 */ { 4, s_0_42, 9, -1},
/* 43 */ { 7, s_0_43, 42, -1},
/* 44 */ { 1, s_0_44, -1, -1},
/* 45 */ { 2, s_0_45, 44, -1},
/* 46 */ { 3, s_0_46, 45, -1},
/* 47 */ { 5, s_0_47, 46, -1},
/* 48 */ { 2, s_0_48, 44, -1},
/* 49 */ { 5, s_0_49, 48, -1},
/* 50 */ { 2, s_0_50, 44, -1},
/* 51 */ { 3, s_0_51, 44, -1},
/* 52 */ { 5, s_0_52, 51, -1},
/* 53 */ { 3, s_0_53, 44, -1},
/* 54 */ { 4, s_0_54, 53, -1},
/* 55 */ { 2, s_0_55, 44, -1},
/* 56 */ { 3, s_0_56, 55, -1},
/* 57 */ { 4, s_0_57, 56, -1},
/* 58 */ { 3, s_0_58, 55, -1},
/* 59 */ { 4, s_0_59, 58, -1},
/* 60 */ { 5, s_0_60, 59, -1},
/* 61 */ { 3, s_0_61, 55, -1},
/* 62 */ { 4, s_0_62, 61, -1},
/* 63 */ { 4, s_0_63, 61, -1},
/* 64 */ { 7, s_0_64, 63, -1},
/* 65 */ { 4, s_0_65, 61, -1},
/* 66 */ { 3, s_0_66, 55, -1},
/* 67 */ { 6, s_0_67, 66, -1},
/* 68 */ { 4, s_0_68, 66, -1},
/* 69 */ { 5, s_0_69, 68, -1},
/* 70 */ { 6, s_0_70, 69, -1},
/* 71 */ { 3, s_0_71, 55, -1},
/* 72 */ { 4, s_0_72, 71, -1},
/* 73 */ { 7, s_0_73, 72, -1},
/* 74 */ { 4, s_0_74, 55, -1},
/* 75 */ { 4, s_0_75, 55, -1},
/* 76 */ { 4, s_0_76, 55, -1},
/* 77 */ { 5, s_0_77, 76, -1},
/* 78 */ { 2, s_0_78, 44, -1},
/* 79 */ { 4, s_0_79, 78, -1},
/* 80 */ { 4, s_0_80, 78, -1},
/* 81 */ { 3, s_0_81, 78, -1},
/* 82 */ { 4, s_0_82, 81, -1},
/* 83 */ { 4, s_0_83, 81, -1},
/* 84 */ { 5, s_0_84, 83, -1},
/* 85 */ { 4, s_0_85, 78, -1},
/* 86 */ { 5, s_0_86, 85, -1},
/* 87 */ { 3, s_0_87, 78, -1},
/* 88 */ { 4, s_0_88, 78, -1},
/* 89 */ { 7, s_0_89, 88, -1},
/* 90 */ { 6, s_0_90, 88, -1},
/* 91 */ { 7, s_0_91, 88, -1},
/* 92 */ { 2, s_0_92, 44, -1},
/* 93 */ { 3, s_0_93, 92, -1},
/* 94 */ { 5, s_0_94, 93, -1},
/* 95 */ { 2, s_0_95, -1, -1},
/* 96 */ { 3, s_0_96, -1, -1},
/* 97 */ { 1, s_0_97, -1, -1},
/* 98 */ { 2, s_0_98, -1, -1},
/* 99 */ { 3, s_0_99, 98, -1},
/*100 */ { 3, s_0_100, -1, -1},
/*101 */ { 2, s_0_101, -1, -1},
/*102 */ { 3, s_0_102, 101, -1},
/*103 */ { 2, s_0_103, -1, -1},
/*104 */ { 3, s_0_104, -1, -1},
/*105 */ { 3, s_0_105, -1, -1},
/*106 */ { 6, s_0_106, 105, -1},
/*107 */ { 2, s_0_107, -1, -1},
/*108 */ { 2, s_0_108, -1, -1},
/*109 */ { 3, s_0_109, 108, -1},
/*110 */ { 2, s_0_110, -1, -1},
/*111 */ { 3, s_0_111, 110, -1},
/*112 */ { 3, s_0_112, -1, -1},
/*113 */ { 1, s_0_113, -1, -1},
/*114 */ { 2, s_0_114, 113, -1},
/*115 */ { 4, s_0_115, 114, -1},
/*116 */ { 4, s_0_116, 113, -1},
/*117 */ { 2, s_0_117, 113, -1},
/*118 */ { 1, s_0_118, -1, -1},
/*119 */ { 2, s_0_119, 118, -1},
/*120 */ { 3, s_0_120, 119, -1},
/*121 */ { 2, s_0_121, 118, -1},
/*122 */ { 3, s_0_122, 121, -1},
/*123 */ { 2, s_0_123, 118, -1},
/*124 */ { 3, s_0_124, 123, -1},
/*125 */ { 4, s_0_125, 124, -1},
/*126 */ { 6, s_0_126, 123, -1},
/*127 */ { 4, s_0_127, 123, -1},
/*128 */ { 6, s_0_128, 127, -1},
/*129 */ { 4, s_0_129, 123, -1},
/*130 */ { 5, s_0_130, 129, -1},
/*131 */ { 4, s_0_131, 123, -1},
/*132 */ { 5, s_0_132, 123, -1},
/*133 */ { 4, s_0_133, 123, -1},
/*134 */ { 4, s_0_134, 123, -1},
/*135 */ { 4, s_0_135, 123, -1},
/*136 */ { 3, s_0_136, 118, -1},
/*137 */ { 4, s_0_137, 136, -1},
/*138 */ { 4, s_0_138, 118, -1},
/*139 */ { 3, s_0_139, 118, -1},
/*140 */ { 5, s_0_140, 139, -1},
/*141 */ { 5, s_0_141, 139, -1},
/*142 */ { 3, s_0_142, 118, -1},
/*143 */ { 4, s_0_143, 142, -1},
/*144 */ { 3, s_0_144, 118, -1},
/*145 */ { 4, s_0_145, 118, -1},
/*146 */ { 3, s_0_146, 118, -1},
/*147 */ { 2, s_0_147, 118, -1},
/*148 */ { 3, s_0_148, 147, -1},
/*149 */ { 3, s_0_149, 147, -1},
/*150 */ { 4, s_0_150, 149, -1},
/*151 */ { 3, s_0_151, 118, -1},
/*152 */ { 2, s_0_152, 118, -1},
/*153 */ { 3, s_0_153, 152, -1},
/*154 */ { 4, s_0_154, 153, -1},
/*155 */ { 3, s_0_155, 152, -1},
/*156 */ { 2, s_0_156, 118, -1},
/*157 */ { 4, s_0_157, 156, -1},
/*158 */ { 4, s_0_158, 156, -1},
/*159 */ { 3, s_0_159, 118, -1},
/*160 */ { 4, s_0_160, 159, -1},
/*161 */ { 3, s_0_161, 118, -1},
/*162 */ { 5, s_0_162, 161, -1},
/*163 */ { 6, s_0_163, 162, -1},
/*164 */ { 5, s_0_164, 161, -1},
/*165 */ { 6, s_0_165, 164, -1},
/*166 */ { 6, s_0_166, 164, -1},
/*167 */ { 5, s_0_167, 161, -1},
/*168 */ { 6, s_0_168, 161, -1},
/*169 */ { 9, s_0_169, 168, -1},
/*170 */ { 5, s_0_170, 161, -1},
/*171 */ { 6, s_0_171, 170, -1},
/*172 */ { 6, s_0_172, 161, -1},
/*173 */ { 5, s_0_173, 161, -1},
/*174 */ { 6, s_0_174, 161, -1},
/*175 */ { 9, s_0_175, 174, -1},
/*176 */ { 3, s_0_176, 118, -1},
/*177 */ { 3, s_0_177, 118, -1},
/*178 */ { 4, s_0_178, 118, -1},
/*179 */ { 2, s_0_179, -1, -1},
/*180 */ { 3, s_0_180, 179, -1},
/*181 */ { 2, s_0_181, -1, -1},
/*182 */ { 3, s_0_182, 181, -1},
/*183 */ { 2, s_0_183, -1, -1},
/*184 */ { 3, s_0_184, -1, -1},
/*185 */ { 6, s_0_185, 184, -1},
/*186 */ { 1, s_0_186, -1, -1},
/*187 */ { 2, s_0_187, 186, -1},
/*188 */ { 3, s_0_188, 187, -1},
/*189 */ { 5, s_0_189, 188, -1},
/*190 */ { 2, s_0_190, 186, -1},
/*191 */ { 4, s_0_191, 190, -1},
/*192 */ { 3, s_0_192, 190, -1},
/*193 */ { 1, s_0_193, -1, -1},
/*194 */ { 2, s_0_194, -1, -1},
/*195 */ { 3, s_0_195, 194, -1},
/*196 */ { 2, s_0_196, -1, -1},
/*197 */ { 2, s_0_197, -1, -1},
/*198 */ { 2, s_0_198, -1, -1},
/*199 */ { 4, s_0_199, 198, -1},
/*200 */ { 4, s_0_200, 198, -1},
/*201 */ { 2, s_0_201, -1, -1},
/*202 */ { 3, s_0_202, 201, -1},
/*203 */ { 4, s_0_203, 201, -1}
};


static const struct among a_1[62] =
{
/*  0 */ { 3, s_1_0, -1, -1},
/*  1 */ { 2, s_1_1, -1, -1},
/*  2 */ { 3, s_1_2, 1, -1},
/*  3 */ { 3, s_1_3, -1, -1},
/*  4 */ { 2, s_1_4, -1, -1},
/*  5 */ { 3, s_1_5, 4, -1},
/*  6 */ { 3, s_1_6, 4, -1},
/*  7 */ { 4, s_1_7, 6, -1},
/*  8 */ { 3, s_1_8, -1, -1},
/*  9 */ { 3, s_1_9, -1, -1},
/* 10 */ { 4, s_1_10, 9, -1},
/* 11 */ { 3, s_1_11, -1, -1},
/* 12 */ { 3, s_1_12, -1, -1},
/* 13 */ { 4, s_1_13, 12, -1},
/* 14 */ { 2, s_1_14, -1, -1},
/* 15 */ { 3, s_1_15, 14, -1},
/* 16 */ { 3, s_1_16, -1, -1},
/* 17 */ { 5, s_1_17, 16, -1},
/* 18 */ { 6, s_1_18, 16, -1},
/* 19 */ { 4, s_1_19, -1, -1},
/* 20 */ { 3, s_1_20, -1, -1},
/* 21 */ { 2, s_1_21, -1, -1},
/* 22 */ { 3, s_1_22, -1, -1},
/* 23 */ { 2, s_1_23, -1, -1},
/* 24 */ { 3, s_1_24, 23, -1},
/* 25 */ { 3, s_1_25, 23, -1},
/* 26 */ { 4, s_1_26, -1, -1},
/* 27 */ { 3, s_1_27, -1, -1},
/* 28 */ { 3, s_1_28, -1, -1},
/* 29 */ { 2, s_1_29, -1, -1},
/* 30 */ { 3, s_1_30, 29, -1},
/* 31 */ { 3, s_1_31, -1, -1},
/* 32 */ { 3, s_1_32, -1, -1},
/* 33 */ { 3, s_1_33, -1, -1},
/* 34 */ { 4, s_1_34, 33, -1},
/* 35 */ { 2, s_1_35, -1, -1},
/* 36 */ { 3, s_1_36, 35, -1},
/* 37 */ { 3, s_1_37, 35, -1},
/* 38 */ { 4, s_1_38, 37, -1},
/* 39 */ { 3, s_1_39, -1, -1},
/* 40 */ { 4, s_1_40, 39, -1},
/* 41 */ { 3, s_1_41, -1, -1},
/* 42 */ { 4, s_1_42, 41, -1},
/* 43 */ { 3, s_1_43, -1, -1},
/* 44 */ { 7, s_1_44, -1, -1},
/* 45 */ { 3, s_1_45, -1, -1},
/* 46 */ { 4, s_1_46, 45, -1},
/* 47 */ { 5, s_1_47, 46, -1},
/* 48 */ { 3, s_1_48, -1, -1},
/* 49 */ { 2, s_1_49, -1, -1},
/* 50 */ { 3, s_1_50, 49, -1},
/* 51 */ { 4, s_1_51, 50, -1},
/* 52 */ { 2, s_1_52, -1, -1},
/* 53 */ { 3, s_1_53, -1, -1},
/* 54 */ { 5, s_1_54, -1, -1},
/* 55 */ { 3, s_1_55, -1, -1},
/* 56 */ { 3, s_1_56, -1, -1},
/* 57 */ { 2, s_1_57, -1, -1},
/* 58 */ { 3, s_1_58, -1, -1},
/* 59 */ { 6, s_1_59, -1, -1},
/* 60 */ { 2, s_1_60, -1, -1},
/* 61 */ { 5, s_1_61, 60, -1}
};


static const struct among a_2[11] =
{
/*  0 */ { 5, s_2_0, -1, 7},
/*  1 */ { 6, s_2_1, -1, 3},
/*  2 */ { 5, s_2_2, -1, 6},
/*  3 */ { 5, s_2_3, -1, 8},
/*  4 */ { 4, s_2_4, -1, 1},
/*  5 */ { 4, s_2_5, -1, 2},
/*  6 */ { 5, s_2_6, -1, 5},
/*  7 */ { 7, s_2_7, -1, 8},
/*  8 */ { 6, s_2_8, -1, 1},
/*  9 */ { 6, s_2_9, -1, 2},
/* 10 */ { 4, s_2_10, -1, 4}
};


static const struct among a_3[2] =
{
/*  0 */ { 2, s_3_0, -1, 1},
/*  1 */ { 3, s_3_1, -1, 2}
};


static const struct among a_4[1] =
{
/*  0 */ { 2, s_4_0, -1, 1}
};

static const unsigned char g_v[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 64, 1, 0, 64, 0, 0, 0, 0, 0, 0, 0, 4, 4 };

static const symbol s_0[] = { 'a', 'i', 't', 0xC4, 0x97 };
static const symbol s_1[] = { 'u', 'o', 't', 0xC4, 0x97 };
static const symbol s_2[] = { 0xC4, 0x97, 'j', 'i', 'm', 'a', 's' };
static const symbol s_3[] = { 'e', 's', 'y', 's' };
static const symbol s_4[] = { 'a', 's', 'y', 's' };
static const symbol s_5[] = { 'a', 'v', 'i', 'm', 'a', 's' };
static const symbol s_6[] = { 'o', 'j', 'i', 'm', 'a', 's' };
static const symbol s_7[] = { 'o', 'k', 'a', 't', 0xC4, 0x97 };
static const symbol s_8[] = { 't' };
static const symbol s_9[] = { 'd' };
static const symbol s_10[] = { 'g' };

int Xapian::InternalStemLithuanian::r_R1() {
    if (!(I_p1 <= c)) return 0;
    return 1;
}

int Xapian::InternalStemLithuanian::r_step1() {

    {   int mlimit1;
        if (c < I_p1) return 0;
        mlimit1 = lb; lb = I_p1;
        ket = c;
        if (!(find_among_b(s_pool, a_0, 204, 0, 0))) { lb = mlimit1; return 0; }
        bra = c;
        lb = mlimit1;
    }
    {   int ret = r_R1();
        if (ret <= 0) return ret;
    }
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    return 1;
}

int Xapian::InternalStemLithuanian::r_step2() {
    while(1) {
        int m1 = l - c; (void)m1;

        {   int mlimit2;
            if (c < I_p1) goto lab0;
            mlimit2 = lb; lb = I_p1;
            ket = c;
            if (!(find_among_b(s_pool, a_1, 62, 0, 0))) { lb = mlimit2; goto lab0; }
            bra = c;
            lb = mlimit2;
        }
        {   int ret = slice_del();
            if (ret < 0) return ret;
        }
        continue;
    lab0:
        c = l - m1;
        break;
    }
    return 1;
}

int Xapian::InternalStemLithuanian::r_fix_conflicts() {
    int among_var;
    ket = c;
    if (c - 3 <= lb || p[c - 1] >> 5 != 3 || !((2621472 >> (p[c - 1] & 0x1f)) & 1)) return 0;
    among_var = find_among_b(s_pool, a_2, 11, 0, 0);
    if (!(among_var)) return 0;
    bra = c;
    switch (among_var) {
        case 1:
            {   int ret = slice_from_s(5, s_0);
                if (ret < 0) return ret;
            }
            break;
        case 2:
            {   int ret = slice_from_s(5, s_1);
                if (ret < 0) return ret;
            }
            break;
        case 3:
            {   int ret = slice_from_s(7, s_2);
                if (ret < 0) return ret;
            }
            break;
        case 4:
            {   int ret = slice_from_s(4, s_3);
                if (ret < 0) return ret;
            }
            break;
        case 5:
            {   int ret = slice_from_s(4, s_4);
                if (ret < 0) return ret;
            }
            break;
        case 6:
            {   int ret = slice_from_s(6, s_5);
                if (ret < 0) return ret;
            }
            break;
        case 7:
            {   int ret = slice_from_s(6, s_6);
                if (ret < 0) return ret;
            }
            break;
        case 8:
            {   int ret = slice_from_s(6, s_7);
                if (ret < 0) return ret;
            }
            break;
    }
    return 1;
}

int Xapian::InternalStemLithuanian::r_fix_chdz() {
    int among_var;
    ket = c;
    if (c - 1 <= lb || (p[c - 1] != 141 && p[c - 1] != 190)) return 0;
    among_var = find_among_b(s_pool, a_3, 2, 0, 0);
    if (!(among_var)) return 0;
    bra = c;
    switch (among_var) {
        case 1:
            {   int ret = slice_from_s(1, s_8);
                if (ret < 0) return ret;
            }
            break;
        case 2:
            {   int ret = slice_from_s(1, s_9);
                if (ret < 0) return ret;
            }
            break;
    }
    return 1;
}

int Xapian::InternalStemLithuanian::r_fix_gd() {
    ket = c;
    if (c - 1 <= lb || p[c - 1] != 100) return 0;
    if (!(find_among_b(s_pool, a_4, 1, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_from_s(1, s_10);
        if (ret < 0) return ret;
    }
    return 1;
}

int Xapian::InternalStemLithuanian::stem() {
    I_p1 = l;
    {   int c1 = c;
        {   int c2 = c;
            {   int c_test3 = c;
                if (c == l || p[c] != 'a') { c = c2; goto lab1; }
                c++;
                c = c_test3;
            }
            if (!(len_utf8(p) > 6)) { c = c2; goto lab1; }
            {   int ret = skip_utf8(p, c, 0, l, + 1);
                if (ret < 0) { c = c2; goto lab1; }
                c = ret;
            }
        lab1:
            ;
        }
        {   
            int ret = out_grouping_U(g_v, 97, 371, 1);
            if (ret < 0) goto lab0;
            c += ret;
        }
        {   
            int ret = in_grouping_U(g_v, 97, 371, 1);
            if (ret < 0) goto lab0;
            c += ret;
        }
        I_p1 = c;
    lab0:
        c = c1;
    }
    lb = c; c = l;

    {   int m4 = l - c; (void)m4;
        {   int ret = r_fix_conflicts();
            if (ret < 0) return ret;
        }
        c = l - m4;
    }
    {   int m5 = l - c; (void)m5;
        {   int ret = r_step1();
            if (ret < 0) return ret;
        }
        c = l - m5;
    }
    {   int m6 = l - c; (void)m6;
        {   int ret = r_fix_chdz();
            if (ret < 0) return ret;
        }
        c = l - m6;
    }
    {   int m7 = l - c; (void)m7;
        {   int ret = r_step2();
            if (ret < 0) return ret;
        }
        c = l - m7;
    }
    {   int m8 = l - c; (void)m8;
        {   int ret = r_fix_chdz();
            if (ret < 0) return ret;
        }
        c = l - m8;
    }
    {   int m9 = l - c; (void)m9;
        {   int ret = r_fix_gd();
            if (ret < 0) return ret;
        }
        c = l - m9;
    }
    c = lb;
    return 1;
}

Xapian::InternalStemLithuanian::InternalStemLithuanian()
    : I_p1(0)
{
}

Xapian::InternalStemLithuanian::~InternalStemLithuanian()
{
}

std::string
Xapian::InternalStemLithuanian::get_description() const
{
    return "lithuanian";
}
