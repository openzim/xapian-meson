/* Generated by Snowball 2.0.0 - https://snowballstem.org/ */


#include <config.h>
#include <limits.h>
#include "armenian.h"

static const symbol s_pool[] = {
#define s_0_0 0
0xD5, 0xA2, 0xD5, 0xA1, 0xD6, 0x80,
#define s_0_1 (s_0_2 + 2)
#define s_0_2 6
0xD5, 0xA5, 0xD6, 0x80, 0xD5, 0xB8, 0xD6, 0x80, 0xD5, 0xA4,
#define s_0_3 16
0xD5, 0xA1, 0xD5, 0xAC, 0xD5, 0xAB,
#define s_0_4 22
0xD5, 0xA1, 0xD5, 0xAF, 0xD5, 0xAB,
#define s_0_5 28
0xD5, 0xB8, 0xD6, 0x80, 0xD5, 0xA1, 0xD5, 0xAF,
#define s_0_6 36
0xD5, 0xA5, 0xD5, 0xB2,
#define s_0_7 40
0xD5, 0xBE, 0xD5, 0xB8, 0xD6, 0x82, 0xD5, 0xB6,
#define s_0_8 48
0xD5, 0xA1, 0xD6, 0x80, 0xD5, 0xA1, 0xD5, 0xB6,
#define s_0_9 56
0xD5, 0xA1, 0xD5, 0xAF, 0xD5, 0xA1, 0xD5, 0xB6,
#define s_0_10 (s_0_11 + 4)
#define s_0_11 64
0xD5, 0xA5, 0xD6, 0x80, 0xD5, 0xA5, 0xD5, 0xB6,
#define s_0_12 72
0xD5, 0xA5, 0xD5, 0xAF, 0xD5, 0xA5, 0xD5, 0xB6,
#define s_0_13 80
0xD5, 0xB8, 0xD6, 0x80, 0xD5, 0xA7, 0xD5, 0xB6,
#define s_0_14 (s_0_15 + 2)
#define s_0_15 88
0xD5, 0xA3, 0xD5, 0xAB, 0xD5, 0xB6,
#define s_0_16 94
0xD5, 0xB8, 0xD5, 0xBE, 0xD5, 0xAB, 0xD5, 0xB6,
#define s_0_17 102
0xD5, 0xAC, 0xD5, 0xA1, 0xD5, 0xB5, 0xD5, 0xB6,
#define s_0_18 110
0xD5, 0xBA, 0xD5, 0xA5, 0xD5, 0xBD,
#define s_0_19 116
0xD5, 0xAB, 0xD5, 0xBE,
#define s_0_20 120
0xD5, 0xA1, 0xD5, 0xBF,
#define s_0_21 124
0xD5, 0xA1, 0xD5, 0xBE, 0xD5, 0xA5, 0xD5, 0xBF,
#define s_0_22 132
0xD5, 0xAF, 0xD5, 0xB8, 0xD5, 0xBF,
#define s_1_0 (s_1_1 + 4)
#define s_1_1 138
0xD5, 0xA1, 0xD6, 0x81, 0xD5, 0xA1, 0xD6, 0x80,
#define s_1_2 146
0xD5, 0xA5, 0xD6, 0x81, 0xD5, 0xA1, 0xD6, 0x80,
#define s_1_3 154
0xD5, 0xA1, 0xD6, 0x81, 0xD6, 0x80, 0xD5, 0xAB, 0xD6, 0x80,
#define s_1_4 164
0xD5, 0xA1, 0xD6, 0x81, 0xD5, 0xAB, 0xD6, 0x80,
#define s_1_5 (s_1_6 + 2)
#define s_1_6 172
0xD5, 0xBE, 0xD5, 0xA5, 0xD6, 0x81, 0xD5, 0xAB, 0xD6, 0x80,
#define s_1_7 182
0xD5, 0xA1, 0xD5, 0xAC, 0xD5, 0xB8, 0xD6, 0x82, 0xD6, 0x81,
#define s_1_8 192
0xD5, 0xA5, 0xD5, 0xAC, 0xD5, 0xB8, 0xD6, 0x82, 0xD6, 0x81,
#define s_1_9 s_1_1
#define s_1_10 s_1_2
#define s_1_11 202
0xD5, 0xA1, 0xD6, 0x81, 0xD6, 0x80, 0xD5, 0xA5, 0xD6, 0x81,
#define s_1_12 s_1_7
#define s_1_13 s_1_8
#define s_1_14 (s_1_15 + 2)
#define s_1_15 (s_1_16 + 2)
#define s_1_16 212
0xD5, 0xA1, 0xD6, 0x81, 0xD5, 0xA1, 0xD6, 0x84,
#define s_1_17 220
0xD5, 0xA1, 0xD6, 0x81, 0xD6, 0x80, 0xD5, 0xAB, 0xD6, 0x84,
#define s_1_18 230
0xD5, 0xA1, 0xD6, 0x81, 0xD5, 0xAB, 0xD6, 0x84,
#define s_1_19 (s_1_20 + 2)
#define s_1_20 238
0xD5, 0xBE, 0xD5, 0xA5, 0xD6, 0x81, 0xD5, 0xAB, 0xD6, 0x84,
#define s_1_21 (s_1_22 + 2)
#define s_1_22 (s_1_23 + 2)
#define s_1_23 248
0xD5, 0xA1, 0xD6, 0x81, 0xD5, 0xA1, 0xD5, 0xB6, 0xD6, 0x84,
#define s_1_24 258
0xD5, 0xA1, 0xD6, 0x81, 0xD6, 0x80, 0xD5, 0xAB, 0xD5, 0xB6, 0xD6, 0x84,
#define s_1_25 270
0xD5, 0xA1, 0xD6, 0x81, 0xD5, 0xAB, 0xD5, 0xB6, 0xD6, 0x84,
#define s_1_26 (s_1_27 + 2)
#define s_1_27 280
0xD5, 0xBE, 0xD5, 0xA5, 0xD6, 0x81, 0xD5, 0xAB, 0xD5, 0xB6, 0xD6, 0x84,
#define s_1_28 s_1_0
#define s_1_29 s_1_1
#define s_1_30 s_1_2
#define s_1_31 s_1_6
#define s_1_32 s_1_3
#define s_1_33 s_1_4
#define s_1_34 s_1_5
#define s_1_35 s_1_6
#define s_1_36 s_1_7
#define s_1_37 292
0xD5, 0xA8, 0xD5, 0xA1, 0xD5, 0xAC,
#define s_1_38 298
0xD5, 0xA1, 0xD6, 0x81, 0xD5, 0xB6, 0xD5, 0xA1, 0xD5, 0xAC,
#define s_1_39 308
0xD5, 0xA1, 0xD5, 0xB6, 0xD5, 0xA1, 0xD5, 0xAC,
#define s_1_40 316
0xD5, 0xA5, 0xD5, 0xB6, 0xD5, 0xA1, 0xD5, 0xAC,
#define s_1_41 s_1_8
#define s_1_42 324
0xD5, 0xA8, 0xD5, 0xA5, 0xD5, 0xAC,
#define s_1_43 (s_1_44 + 2)
#define s_1_44 (s_1_45 + 2)
#define s_1_45 330
0xD5, 0xA5, 0xD6, 0x81, 0xD5, 0xB6, 0xD5, 0xA5, 0xD5, 0xAC,
#define s_1_46 340
0xD5, 0xB9, 0xD5, 0xA5, 0xD5, 0xAC,
#define s_1_47 (s_1_48 + 4)
#define s_1_48 346
0xD5, 0xA1, 0xD6, 0x81, 0xD5, 0xBE, 0xD5, 0xA5, 0xD5, 0xAC,
#define s_1_49 356
0xD5, 0xA5, 0xD6, 0x81, 0xD5, 0xBE, 0xD5, 0xA5, 0xD5, 0xAC,
#define s_1_50 (s_1_51 + 2)
#define s_1_51 366
0xD5, 0xA1, 0xD5, 0xBF, 0xD5, 0xA5, 0xD5, 0xAC,
#define s_1_52 (s_1_53 + 2)
#define s_1_53 374
0xD5, 0xAF, 0xD5, 0xB8, 0xD5, 0xBF, 0xD5, 0xA5, 0xD5, 0xAC,
#define s_1_54 384
0xD5, 0xBE, 0xD5, 0xA1, 0xD5, 0xAE,
#define s_1_55 (s_1_56 + 2)
#define s_1_56 390
0xD5, 0xBE, 0xD5, 0xB8, 0xD6, 0x82, 0xD5, 0xB4,
#define s_1_57 s_1_21
#define s_1_58 s_1_22
#define s_1_59 s_1_23
#define s_1_60 s_1_24
#define s_1_61 s_1_25
#define s_1_62 s_1_26
#define s_1_63 s_1_27
#define s_1_64 398
0xD5, 0xA1, 0xD5, 0xAC, 0xD5, 0xAB, 0xD5, 0xBD,
#define s_1_65 406
0xD5, 0xA5, 0xD5, 0xAC, 0xD5, 0xAB, 0xD5, 0xBD,
#define s_1_66 (s_1_67 + 4)
#define s_1_67 414
0xD5, 0xA1, 0xD6, 0x81, 0xD5, 0xA1, 0xD5, 0xBE,
#define s_1_68 422
0xD5, 0xA5, 0xD6, 0x81, 0xD5, 0xA1, 0xD5, 0xBE,
#define s_1_69 430
0xD5, 0xA1, 0xD5, 0xAC, 0xD5, 0xB8, 0xD5, 0xBE,
#define s_1_70 438
0xD5, 0xA5, 0xD5, 0xAC, 0xD5, 0xB8, 0xD5, 0xBE,
#define s_2_0 446
0xD5, 0xA3, 0xD5, 0xA1, 0xD6, 0x80,
#define s_2_1 (s_2_2 + 2)
#define s_2_2 452
0xD5, 0xA1, 0xD5, 0xBE, 0xD5, 0xB8, 0xD6, 0x80,
#define s_2_3 460
0xD5, 0xA1, 0xD5, 0xB6, 0xD6, 0x85, 0xD6, 0x81,
#define s_2_4 468
0xD5, 0xB8, 0xD6, 0x81,
#define s_2_5 s_2_13
#define s_2_6 (s_2_7 + 4)
#define s_2_7 472
0xD5, 0xA1, 0xD6, 0x80, 0xD6, 0x84,
#define s_2_8 478
0xD5, 0xB9, 0xD5, 0xA5, 0xD6, 0x84,
#define s_2_9 (s_2_10 + 4)
#define s_2_10 484
0xD5, 0xA1, 0xD5, 0xAC, 0xD5, 0xAB, 0xD6, 0x84,
#define s_2_11 492
0xD5, 0xA1, 0xD5, 0xB6, 0xD5, 0xAB, 0xD6, 0x84,
#define s_2_12 500
0xD5, 0xBE, 0xD5, 0xA1, 0xD5, 0xAE, 0xD6, 0x84,
#define s_2_13 508
0xD5, 0xB8, 0xD6, 0x82, 0xD5, 0xB5, 0xD6, 0x84,
#define s_2_14 (s_2_15 + 2)
#define s_2_15 516
0xD5, 0xB4, 0xD5, 0xB8, 0xD6, 0x82, 0xD5, 0xB6, 0xD6, 0x84,
#define s_2_16 526
0xD5, 0xA5, 0xD5, 0xB6, 0xD6, 0x84,
#define s_2_17 532
0xD5, 0xB8, 0xD5, 0xB6, 0xD6, 0x84,
#define s_2_18 538
0xD5, 0xAB, 0xD5, 0xB9, 0xD6, 0x84,
#define s_2_19 544
0xD5, 0xB8, 0xD6, 0x80, 0xD5, 0xA4,
#define s_2_20 550
0xD5, 0xB8, 0xD6, 0x82, 0xD5, 0xB5, 0xD5, 0xA9,
#define s_2_21 558
0xD6, 0x81, 0xD5, 0xAB,
#define s_2_22 562
0xD5, 0xB8, 0xD6, 0x82, 0xD5, 0xB0, 0xD5, 0xAB,
#define s_2_23 570
0xD5, 0xAB, 0xD5, 0xAC,
#define s_2_24 574
0xD5, 0xB8, 0xD6, 0x82, 0xD5, 0xAF,
#define s_2_25 (s_2_26 + 2)
#define s_2_26 580
0xD5, 0xB5, 0xD5, 0xA1, 0xD5, 0xAF,
#define s_2_27 586
0xD5, 0xA1, 0xD5, 0xB6, 0xD5, 0xA1, 0xD5, 0xAF,
#define s_2_28 594
0xD5, 0xAB, 0xD5, 0xAF,
#define s_2_29 (s_2_30 + 6)
#define s_2_30 598
0xD5, 0xB8, 0xD6, 0x82, 0xD5, 0xA9, 0xD5, 0xB5, 0xD5, 0xB8, 0xD6, 0x82, 0xD5, 0xB6,
#define s_2_31 s_2_3
#define s_2_32 612
0xD5, 0xA1, 0xD6, 0x80, 0xD5, 0xA1, 0xD5, 0xB6,
#define s_2_33 620
0xD5, 0xBA, 0xD5, 0xA1, 0xD5, 0xB6,
#define s_2_34 626
0xD5, 0xBD, 0xD5, 0xBF, 0xD5, 0xA1, 0xD5, 0xB6,
#define s_2_35 634
0xD5, 0xA5, 0xD5, 0xB2, 0xD5, 0xA7, 0xD5, 0xB6,
#define s_2_36 642
0xD5, 0xA1, 0xD5, 0xAE, 0xD5, 0xB8,
#define s_2_37 s_2_18
#define s_2_38 s_2_39
#define s_2_39 648
0xD5, 0xB8, 0xD6, 0x82, 0xD5, 0xBD, 0xD5, 0xBF,
#define s_3_0 (s_3_1 + 2)
#define s_3_1 s_3_6
#define s_3_2 (s_3_3 + 4)
#define s_3_3 656
0xD5, 0xB8, 0xD6, 0x82, 0xD6, 0x81,
#define s_3_4 (s_3_5 + 4)
#define s_3_5 (s_3_6 + 2)
#define s_3_6 662
0xD5, 0xB6, 0xD5, 0xA5, 0xD6, 0x80, 0xD5, 0xAB, 0xD6, 0x81,
#define s_3_7 672
0xD6, 0x81, 0xD5, 0xAB, 0xD6, 0x81,
#define s_3_8 678
0xD5, 0xBE, 0xD5, 0xA1, 0xD5, 0xB6, 0xD5, 0xAB, 0xD6, 0x81,
#define s_3_9 688
0xD5, 0xB8, 0xD5, 0xBB, 0xD5, 0xAB, 0xD6, 0x81,
#define s_3_10 696
0xD5, 0xBE, 0xD5, 0xAB, 0xD6, 0x81,
#define s_3_11 702
0xD5, 0xB8, 0xD6, 0x81,
#define s_3_12 706
0xD5, 0xBD, 0xD5, 0xA1,
#define s_3_13 s_3_8
#define s_3_14 710
0xD5, 0xA1, 0xD5, 0xB4, 0xD5, 0xA2,
#define s_3_15 (s_3_16 + 4)
#define s_3_16 (s_3_17 + 2)
#define s_3_17 716
0xD5, 0xB6, 0xD5, 0xA5, 0xD6, 0x80, 0xD5, 0xA4,
#define s_3_18 724
0xD5, 0xB8, 0xD6, 0x82, 0xD5, 0xA4,
#define s_3_19 (s_3_20 + 8)
#define s_3_20 730
0xD5, 0xB8, 0xD6, 0x82, 0xD5, 0xA9, 0xD5, 0xB5, 0xD5, 0xA1, 0xD5, 0xB6, 0xD5, 0xA4,
#define s_3_21 744
0xD5, 0xBE, 0xD5, 0xA1, 0xD5, 0xB6, 0xD5, 0xA4,
#define s_3_22 752
0xD5, 0xB8, 0xD5, 0xBB, 0xD5, 0xA4,
#define s_3_23 (s_3_24 + 4)
#define s_3_24 (s_3_25 + 2)
#define s_3_25 758
0xD5, 0xB6, 0xD5, 0xA5, 0xD6, 0x80, 0xD5, 0xA8,
#define s_3_26 (s_3_27 + 8)
#define s_3_27 766
0xD5, 0xB8, 0xD6, 0x82, 0xD5, 0xA9, 0xD5, 0xB5, 0xD5, 0xA1, 0xD5, 0xB6, 0xD5, 0xA8,
#define s_3_28 780
0xD5, 0xBE, 0xD5, 0xA1, 0xD5, 0xB6, 0xD5, 0xA8,
#define s_3_29 788
0xD5, 0xB8, 0xD5, 0xBB, 0xD5, 0xA8,
#define s_3_30 s_3_4
#define s_3_31 s_3_5
#define s_3_32 s_3_6
#define s_3_33 s_3_10
#define s_3_34 (s_3_35 + 2)
#define s_3_35 794
0xD5, 0xB6, 0xD5, 0xA5, 0xD6, 0x80, 0xD5, 0xB8, 0xD6, 0x82, 0xD5, 0xB4,
#define s_3_36 806
0xD5, 0xA1, 0xD5, 0xB6, 0xD5, 0xB8, 0xD6, 0x82, 0xD5, 0xB4,
#define s_3_37 s_3_1
#define s_3_38 (s_3_39 + 2)
#define s_3_39 816
0xD5, 0xB6, 0xD5, 0xA5, 0xD6, 0x80, 0xD5, 0xB6,
#define s_3_40 824
0xD5, 0xB8, 0xD6, 0x82, 0xD5, 0xB6,
#define s_3_41 (s_3_8 + 2)
#define s_3_42 s_3_20
#define s_3_43 s_3_8
#define s_3_44 (s_3_45 + 4)
#define s_3_45 (s_3_46 + 2)
#define s_3_46 830
0xD5, 0xB6, 0xD5, 0xA5, 0xD6, 0x80, 0xD5, 0xAB, 0xD5, 0xB6,
#define s_3_47 840
0xD5, 0xB8, 0xD6, 0x82, 0xD5, 0xA9, 0xD5, 0xB5, 0xD5, 0xA1, 0xD5, 0xB6, 0xD5, 0xB6,
#define s_3_48 s_3_9
#define s_3_49 854
0xD5, 0xB8, 0xD6, 0x82, 0xD5, 0xA9, 0xD5, 0xB5, 0xD5, 0xA1, 0xD5, 0xB6, 0xD5, 0xBD,
#define s_3_50 868
0xD5, 0xBE, 0xD5, 0xA1, 0xD5, 0xB6, 0xD5, 0xBD,
#define s_3_51 876
0xD5, 0xB8, 0xD5, 0xBB, 0xD5, 0xBD,
#define s_3_52 (s_3_53 + 4)
#define s_3_53 (s_3_54 + 2)
#define s_3_54 882
0xD5, 0xB6, 0xD5, 0xA5, 0xD6, 0x80, 0xD5, 0xB8, 0xD5, 0xBE,
#define s_3_55 892
0xD5, 0xA1, 0xD5, 0xB6, 0xD5, 0xB8, 0xD5, 0xBE,
#define s_3_56 900
0xD5, 0xBE, 0xD5, 0xB8, 0xD5, 0xBE,
};


static const struct among a_0[23] =
{
/*  0 */ { 6, s_0_0, -1, 1},
/*  1 */ { 8, s_0_1, -1, 1},
/*  2 */ { 10, s_0_2, 1, 1},
/*  3 */ { 6, s_0_3, -1, 1},
/*  4 */ { 6, s_0_4, -1, 1},
/*  5 */ { 8, s_0_5, -1, 1},
/*  6 */ { 4, s_0_6, -1, 1},
/*  7 */ { 8, s_0_7, -1, 1},
/*  8 */ { 8, s_0_8, -1, 1},
/*  9 */ { 8, s_0_9, -1, 1},
/* 10 */ { 4, s_0_10, -1, 1},
/* 11 */ { 8, s_0_11, 10, 1},
/* 12 */ { 8, s_0_12, 10, 1},
/* 13 */ { 8, s_0_13, -1, 1},
/* 14 */ { 4, s_0_14, -1, 1},
/* 15 */ { 6, s_0_15, 14, 1},
/* 16 */ { 8, s_0_16, 14, 1},
/* 17 */ { 8, s_0_17, -1, 1},
/* 18 */ { 6, s_0_18, -1, 1},
/* 19 */ { 4, s_0_19, -1, 1},
/* 20 */ { 4, s_0_20, -1, 1},
/* 21 */ { 8, s_0_21, -1, 1},
/* 22 */ { 6, s_0_22, -1, 1}
};


static const struct among a_1[71] =
{
/*  0 */ { 4, s_1_0, -1, 1},
/*  1 */ { 8, s_1_1, 0, 1},
/*  2 */ { 8, s_1_2, 0, 1},
/*  3 */ { 10, s_1_3, -1, 1},
/*  4 */ { 8, s_1_4, -1, 1},
/*  5 */ { 8, s_1_5, -1, 1},
/*  6 */ { 10, s_1_6, 5, 1},
/*  7 */ { 10, s_1_7, -1, 1},
/*  8 */ { 10, s_1_8, -1, 1},
/*  9 */ { 4, s_1_9, -1, 1},
/* 10 */ { 4, s_1_10, -1, 1},
/* 11 */ { 10, s_1_11, 10, 1},
/* 12 */ { 8, s_1_12, -1, 1},
/* 13 */ { 8, s_1_13, -1, 1},
/* 14 */ { 4, s_1_14, -1, 1},
/* 15 */ { 6, s_1_15, 14, 1},
/* 16 */ { 8, s_1_16, 15, 1},
/* 17 */ { 10, s_1_17, -1, 1},
/* 18 */ { 8, s_1_18, -1, 1},
/* 19 */ { 8, s_1_19, -1, 1},
/* 20 */ { 10, s_1_20, 19, 1},
/* 21 */ { 6, s_1_21, -1, 1},
/* 22 */ { 8, s_1_22, 21, 1},
/* 23 */ { 10, s_1_23, 22, 1},
/* 24 */ { 12, s_1_24, -1, 1},
/* 25 */ { 10, s_1_25, -1, 1},
/* 26 */ { 10, s_1_26, -1, 1},
/* 27 */ { 12, s_1_27, 26, 1},
/* 28 */ { 2, s_1_28, -1, 1},
/* 29 */ { 6, s_1_29, 28, 1},
/* 30 */ { 6, s_1_30, 28, 1},
/* 31 */ { 4, s_1_31, -1, 1},
/* 32 */ { 8, s_1_32, -1, 1},
/* 33 */ { 6, s_1_33, -1, 1},
/* 34 */ { 6, s_1_34, -1, 1},
/* 35 */ { 8, s_1_35, 34, 1},
/* 36 */ { 4, s_1_36, -1, 1},
/* 37 */ { 6, s_1_37, 36, 1},
/* 38 */ { 10, s_1_38, 36, 1},
/* 39 */ { 8, s_1_39, 36, 1},
/* 40 */ { 8, s_1_40, 36, 1},
/* 41 */ { 4, s_1_41, -1, 1},
/* 42 */ { 6, s_1_42, 41, 1},
/* 43 */ { 6, s_1_43, 41, 1},
/* 44 */ { 8, s_1_44, 43, 1},
/* 45 */ { 10, s_1_45, 44, 1},
/* 46 */ { 6, s_1_46, 41, 1},
/* 47 */ { 6, s_1_47, 41, 1},
/* 48 */ { 10, s_1_48, 47, 1},
/* 49 */ { 10, s_1_49, 47, 1},
/* 50 */ { 6, s_1_50, 41, 1},
/* 51 */ { 8, s_1_51, 50, 1},
/* 52 */ { 8, s_1_52, 50, 1},
/* 53 */ { 10, s_1_53, 52, 1},
/* 54 */ { 6, s_1_54, -1, 1},
/* 55 */ { 6, s_1_55, -1, 1},
/* 56 */ { 8, s_1_56, 55, 1},
/* 57 */ { 4, s_1_57, -1, 1},
/* 58 */ { 6, s_1_58, 57, 1},
/* 59 */ { 8, s_1_59, 58, 1},
/* 60 */ { 10, s_1_60, -1, 1},
/* 61 */ { 8, s_1_61, -1, 1},
/* 62 */ { 8, s_1_62, -1, 1},
/* 63 */ { 10, s_1_63, 62, 1},
/* 64 */ { 8, s_1_64, -1, 1},
/* 65 */ { 8, s_1_65, -1, 1},
/* 66 */ { 4, s_1_66, -1, 1},
/* 67 */ { 8, s_1_67, 66, 1},
/* 68 */ { 8, s_1_68, 66, 1},
/* 69 */ { 8, s_1_69, -1, 1},
/* 70 */ { 8, s_1_70, -1, 1}
};


static const struct among a_2[40] =
{
/*  0 */ { 6, s_2_0, -1, 1},
/*  1 */ { 6, s_2_1, -1, 1},
/*  2 */ { 8, s_2_2, 1, 1},
/*  3 */ { 8, s_2_3, -1, 1},
/*  4 */ { 4, s_2_4, -1, 1},
/*  5 */ { 4, s_2_5, -1, 1},
/*  6 */ { 2, s_2_6, -1, 1},
/*  7 */ { 6, s_2_7, 6, 1},
/*  8 */ { 6, s_2_8, 6, 1},
/*  9 */ { 4, s_2_9, 6, 1},
/* 10 */ { 8, s_2_10, 9, 1},
/* 11 */ { 8, s_2_11, 9, 1},
/* 12 */ { 8, s_2_12, 6, 1},
/* 13 */ { 8, s_2_13, 6, 1},
/* 14 */ { 8, s_2_14, 6, 1},
/* 15 */ { 10, s_2_15, 14, 1},
/* 16 */ { 6, s_2_16, 6, 1},
/* 17 */ { 6, s_2_17, 6, 1},
/* 18 */ { 6, s_2_18, 6, 1},
/* 19 */ { 6, s_2_19, -1, 1},
/* 20 */ { 8, s_2_20, -1, 1},
/* 21 */ { 4, s_2_21, -1, 1},
/* 22 */ { 8, s_2_22, -1, 1},
/* 23 */ { 4, s_2_23, -1, 1},
/* 24 */ { 6, s_2_24, -1, 1},
/* 25 */ { 4, s_2_25, -1, 1},
/* 26 */ { 6, s_2_26, 25, 1},
/* 27 */ { 8, s_2_27, 25, 1},
/* 28 */ { 4, s_2_28, -1, 1},
/* 29 */ { 8, s_2_29, -1, 1},
/* 30 */ { 14, s_2_30, 29, 1},
/* 31 */ { 4, s_2_31, -1, 1},
/* 32 */ { 8, s_2_32, 31, 1},
/* 33 */ { 6, s_2_33, 31, 1},
/* 34 */ { 8, s_2_34, 31, 1},
/* 35 */ { 8, s_2_35, -1, 1},
/* 36 */ { 6, s_2_36, -1, 1},
/* 37 */ { 4, s_2_37, -1, 1},
/* 38 */ { 6, s_2_38, -1, 1},
/* 39 */ { 8, s_2_39, -1, 1}
};


static const struct among a_3[57] =
{
/*  0 */ { 4, s_3_0, -1, 1},
/*  1 */ { 6, s_3_1, 0, 1},
/*  2 */ { 2, s_3_2, -1, 1},
/*  3 */ { 6, s_3_3, 2, 1},
/*  4 */ { 4, s_3_4, 2, 1},
/*  5 */ { 8, s_3_5, 4, 1},
/*  6 */ { 10, s_3_6, 5, 1},
/*  7 */ { 6, s_3_7, 4, 1},
/*  8 */ { 10, s_3_8, 4, 1},
/*  9 */ { 8, s_3_9, 4, 1},
/* 10 */ { 6, s_3_10, 4, 1},
/* 11 */ { 4, s_3_11, 2, 1},
/* 12 */ { 4, s_3_12, -1, 1},
/* 13 */ { 4, s_3_13, -1, 1},
/* 14 */ { 6, s_3_14, -1, 1},
/* 15 */ { 2, s_3_15, -1, 1},
/* 16 */ { 6, s_3_16, 15, 1},
/* 17 */ { 8, s_3_17, 16, 1},
/* 18 */ { 6, s_3_18, 15, 1},
/* 19 */ { 6, s_3_19, 15, 1},
/* 20 */ { 14, s_3_20, 19, 1},
/* 21 */ { 8, s_3_21, 19, 1},
/* 22 */ { 6, s_3_22, 15, 1},
/* 23 */ { 2, s_3_23, -1, 1},
/* 24 */ { 6, s_3_24, 23, 1},
/* 25 */ { 8, s_3_25, 24, 1},
/* 26 */ { 6, s_3_26, 23, 1},
/* 27 */ { 14, s_3_27, 26, 1},
/* 28 */ { 8, s_3_28, 26, 1},
/* 29 */ { 6, s_3_29, 23, 1},
/* 30 */ { 2, s_3_30, -1, 1},
/* 31 */ { 6, s_3_31, 30, 1},
/* 32 */ { 8, s_3_32, 31, 1},
/* 33 */ { 4, s_3_33, 30, 1},
/* 34 */ { 10, s_3_34, -1, 1},
/* 35 */ { 12, s_3_35, 34, 1},
/* 36 */ { 10, s_3_36, -1, 1},
/* 37 */ { 2, s_3_37, -1, 1},
/* 38 */ { 6, s_3_38, 37, 1},
/* 39 */ { 8, s_3_39, 38, 1},
/* 40 */ { 6, s_3_40, 37, 1},
/* 41 */ { 4, s_3_41, 37, 1},
/* 42 */ { 12, s_3_42, 41, 1},
/* 43 */ { 6, s_3_43, 41, 1},
/* 44 */ { 4, s_3_44, 37, 1},
/* 45 */ { 8, s_3_45, 44, 1},
/* 46 */ { 10, s_3_46, 45, 1},
/* 47 */ { 14, s_3_47, 37, 1},
/* 48 */ { 4, s_3_48, -1, 1},
/* 49 */ { 14, s_3_49, -1, 1},
/* 50 */ { 8, s_3_50, -1, 1},
/* 51 */ { 6, s_3_51, -1, 1},
/* 52 */ { 4, s_3_52, -1, 1},
/* 53 */ { 8, s_3_53, 52, 1},
/* 54 */ { 10, s_3_54, 53, 1},
/* 55 */ { 8, s_3_55, 52, 1},
/* 56 */ { 6, s_3_56, 52, 1}
};

static const unsigned char g_v[] = { 209, 4, 128, 0, 18 };


int Xapian::InternalStemArmenian::r_mark_regions() {
    I_pV = l;
    I_p2 = l;
    {   int c1 = c;
        {   
            int ret = out_grouping_U(g_v, 1377, 1413, 1);
            if (ret < 0) goto lab0;
            c += ret;
        }
        I_pV = c;
        {   
            int ret = in_grouping_U(g_v, 1377, 1413, 1);
            if (ret < 0) goto lab0;
            c += ret;
        }
        {   
            int ret = out_grouping_U(g_v, 1377, 1413, 1);
            if (ret < 0) goto lab0;
            c += ret;
        }
        {   
            int ret = in_grouping_U(g_v, 1377, 1413, 1);
            if (ret < 0) goto lab0;
            c += ret;
        }
        I_p2 = c;
    lab0:
        c = c1;
    }
    return 1;
}

int Xapian::InternalStemArmenian::r_R2() {
    if (!(I_p2 <= c)) return 0;
    return 1;
}

int Xapian::InternalStemArmenian::r_adjective() {
    ket = c;
    if (!(find_among_b(s_pool, a_0, 23, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    return 1;
}

int Xapian::InternalStemArmenian::r_verb() {
    ket = c;
    if (!(find_among_b(s_pool, a_1, 71, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    return 1;
}

int Xapian::InternalStemArmenian::r_noun() {
    ket = c;
    if (!(find_among_b(s_pool, a_2, 40, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    return 1;
}

int Xapian::InternalStemArmenian::r_ending() {
    ket = c;
    if (!(find_among_b(s_pool, a_3, 57, 0, 0))) return 0;
    bra = c;
    {   int ret = r_R2();
        if (ret <= 0) return ret;
    }
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    return 1;
}

int Xapian::InternalStemArmenian::stem() {
    
    {   int ret = r_mark_regions();
        if (ret < 0) return ret;
    }
    lb = c; c = l;


    {   int mlimit1;
        if (c < I_pV) return 0;
        mlimit1 = lb; lb = I_pV;
        {   int m2 = l - c; (void)m2;
            {   int ret = r_ending();
                if (ret < 0) return ret;
            }
            c = l - m2;
        }
        {   int m3 = l - c; (void)m3;
            {   int ret = r_verb();
                if (ret < 0) return ret;
            }
            c = l - m3;
        }
        {   int m4 = l - c; (void)m4;
            {   int ret = r_adjective();
                if (ret < 0) return ret;
            }
            c = l - m4;
        }
        {   int m5 = l - c; (void)m5;
            {   int ret = r_noun();
                if (ret < 0) return ret;
            }
            c = l - m5;
        }
        lb = mlimit1;
    }
    c = lb;
    return 1;
}

Xapian::InternalStemArmenian::InternalStemArmenian()
    : I_p2(0), I_pV(0)
{
}

Xapian::InternalStemArmenian::~InternalStemArmenian()
{
}

std::string
Xapian::InternalStemArmenian::get_description() const
{
    return "armenian";
}
